name: Release

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment Environment (production / staging)'
        type: environment
        required: true
      notes:
        description: 'What are you deploying?'
        type: text

env:
  DEPLOYMENT_ENVIRONMENT: ${{ github.event.inputs.environment || 'staging' }}
  NODE_VERSION: 16

concurrency:
  group: ${{ github.event.inputs.environment || 'staging' }}
  cancel-in-progress: false

jobs:
  release:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'staging' }}
    steps:
      - name: Print Deployment Target
        run: |
          echo "Deployment Target: ${{ env.DEPLOYMENT_ENVIRONMENT }}"

      - name: Checkout repo
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm i && npm i aws-cdk -g

      - name: Print destination
        run: echo "Deploying to staging environment"

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Fixing lambda permissions
        run: npm run docker-fix

      - name: Deploying to AWS...
        run: cdk deploy --all --verbose --require-approval never
        env:
          COMMITS_TOKEN: ${{ secrets.COMMITS_TOKEN }}
          HOSTED_ZONE_ID: ${{ secrets.HOSTED_ZONE_ID }}
          ACM_CERTIFICATE_ID: ${{ secrets.ACM_CERTIFICATE_ID }}
          LOGIN_LINKS_PASSWORD: ${{ secrets.LOGIN_LINKS_PASSWORD }}
          SESSION_SIGNATURE_SECRET_1: ${{ secrets.SESSION_SIGNATURE_SECRET_1 }}
          NODE_ENV: production
          NEXT_PUBLIC_DEPLOYMENT_ENVIRONMENT: ${{ env.DEPLOYMENT_ENVIRONMENT }}
          NEXT_PUBLIC_WEBSITE_URL: ${{ secrets.NEXT_PUBLIC_WEBSITE_URL }}
          MONGO_CONNECTION: ${{ secrets.MONGO_CONNECTION }}
