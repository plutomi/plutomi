{{- if .Values.deployment }}
{{- with .Values.deployment }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .metadata.name }}
  labels:
    app: {{ .metadata.name }}
spec:
  replicas: {{ .spec.replicas }}
  selector:
    matchLabels:
      app: {{ .metadata.name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ default 0 (index $.Values "overrides" "maxUnavailable")  }}
      maxSurge: {{ default 1 (index $.Values "overrides" "maxSurge") }}
  template:
    metadata:
      # # Disabled for now. Was using too many resources for my little cluster :3
      # annotations:
      #   prometheus.io/scrape: "true"
      #   prometheus.io/port: "9100"
      labels:
        app: {{ .metadata.name }}
    spec:
      terminationGracePeriodSeconds: {{ default 10 (index $.Values "overrides" "terminationGracePeriodSeconds") }}
      containers:
        {{- range .spec.template.spec.containers }}
        - name: {{ .name }}
          image: {{ .image }}
          imagePullPolicy: Always
          ports:
            # - name: metrics
            #   containerPort: {{ .port }}
            - name: http
              containerPort: {{ .port }}
          env:

            - name: ENVIRONMENT
              value: {{ default "development" (index $.Values "overrides" "ENVIRONMENT") }}
            - name: BASE_WEB_URL
              value: {{ default "https://plutomi.com" (index $.Values "overrides" "BASE_WEB_URL") }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            {{- range $key, $value := .env }}
            - name: {{ $key }}
              {{- if $value.secretKeyRef }}
              valueFrom:
                secretKeyRef:
                  name: {{ $value.secretKeyRef.name }}
                  key: {{ $value.secretKeyRef.key }}
              {{- else if $value.value }}
              value: {{ $value.value | quote }}
              {{- end }}
            {{- end }}
          volumeMounts:
            {{- range .volumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              readOnly: {{ .readOnly | default false }}
            {{- end }}
          lifecycle:
            preStop:
              exec:

                command:
                  - /bin/sh
                  - -c
                  - >
                    sleep {{ default 10 (index $.Values "overrides" "preStopSleepSeconds") }}
           readinessProbe:
            httpGet:

              path: {{ default "/health" (index $.Values "overrides" "healthCheckPath") }}
              port: {{ .port }}
            initialDelaySeconds: {{ default 10 (index $.Values "overrides" "initialDelaySeconds") }}
            periodSeconds: {{ default 10 (index $.Values "overrides" "periodSeconds") }}
            timeoutSeconds: 5
            failureThreshold: 3
        {{- end }}
      volumes:
        {{- range .spec.template.spec.volumes }}
        - name: {{ .name }}
          {{- if .secret }}
          secret:
            secretName: {{ .secret.secretName }}
          {{- else if .configMap }}
          configMap:
            name: {{ .configMap.name }}
          {{- else if .emptyDir }}
          emptyDir: {}
          {{- end }}
        {{- end }}
{{- end }}
{{- end }}
