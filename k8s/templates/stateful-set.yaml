{{- if .Values.databases }}
{{- with .Values.databases }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .name }}
spec:
  serviceName: {{ .name }}
  replicas: {{ .replicas }}
  selector:
    matchLabels:
      app: {{ .name }}
  template:
    metadata:
      labels:
        app: {{ .name }}
    spec:
      securityContext:
        {{- with .securityContext }}
        fsGroup: {{ .fsGroup }}
        runAsUser: {{ .runAsUser }}
        runAsGroup: {{ .runAsGroup }}
        runAsNonRoot: {{ .runAsNonRoot }}
        {{- end }}
      affinity:
        # Node affinity ensures that pods prefer or must be scheduled on particular nodes
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "plutomi-role"
                    operator: In
                    values: # TODO make into loop?
                      - "plutomi-production-0"
                      - "plutomi-production-1"
                      - "plutomi-production-2"
        # Pod anti-affinity prevents multiple DB pods from being scheduled on the same node
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: {{ .name }}
              topologyKey: "kubernetes.io/hostname"
      initContainers:
        {{- range .initContainers }}
        - name: {{ .name }}
          image: {{ .image }}
          command:
            {{- range .command }}
            - {{ . }}
            {{- end }}
          volumeMounts:
            {{- range .volumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              readOnly: {{ .readOnly | default false }}
            {{- end }}
        {{- end }}
      terminationGracePeriodSeconds: {{ $.Values.common.terminationGracePeriodSeconds }}
      containers:
        {{- range .containers }}
        - name: {{ .name }}
          image: {{ .image }}
          ports:
            {{- range .ports }}
            - containerPort: {{ .containerPort }}
            {{- end }}
          command:
            {{- range .command }}
            - "{{ . }}"
            {{- end }}
          env:
            {{- range $key, $value := .env }}
            - name: {{ $key }}
              {{- if $value.secretKeyRef }}
              valueFrom:
                secretKeyRef:
                  name: {{ $value.secretKeyRef.name }}
                  key: {{ $value.secretKeyRef.key }}
              {{- else if $value.value }}
              value: {{ $value.value | quote }}
              {{- end }}
            {{- end }}
          volumeMounts:
            {{- range .volumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              readOnly: {{ .readOnly | default true }}
            {{- end }}
          args:
            {{- range .args }}
            - {{ . }}
            {{- end }}
        {{- end }}
      volumes:
        {{- range .volumes }}
        - name: {{ .name }}
          {{- if .secret }}
          secret:
            secretName: {{ .secret.secretName }}
            items:
              {{- range .secret.items }}
              - key: {{ .key }}
                path: {{ .path }}
              {{- end }}
          {{- else if .configMap }}
          configMap:
            name: {{ .configMap.name }}
            items:
              {{- range .configMap.items }}
              - key: {{ .key }}
                path: {{ .path }}
              {{- end }}
          {{- else if .emptyDir }}
          emptyDir: {}
          {{- end }}
        {{- end }}
  volumeClaimTemplates:
    {{- range .volumeClaimTemplates }}
    - metadata:
        {{- range $key, $value := .metadata }}
        {{ $key }}: {{ $value }}
        {{- end }}
      spec:
        accessModes:
          {{- range $.Values.databases.accessModes }}
          - {{ . }}
          {{- end }}
        resources:
          requests:
            storage: {{ .spec.resources.requests.storage }}
    {{- end }}
  {{- end }}
  {{- end }}
